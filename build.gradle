def buildprop = new Properties()
file("build.properties").withInputStream { buildprop.load(it) }

allprojects {
    buildscript {
        repositories {
            mavenCentral()
        }
    }

    repositories {
        mavenCentral()
    }

    apply plugin: 'java'
    apply plugin: 'idea'

    configurations {
        shade

        compile.extendsFrom(shade)
    }

    idea.module.inheritOutputDirs = true

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

    dependencies {
        compileOnly "org.jetbrains:annotations:${buildprop.jetbrains_annotations_version}"

        compileOnly "org.projectlombok:lombok:${buildprop.lombok_version}"
        annotationProcessor "org.projectlombok:lombok:${buildprop.lombok_version}"

        testCompileOnly "org.projectlombok:lombok:${buildprop.lombok_version}"
        testAnnotationProcessor "org.projectlombok:lombok:${buildprop.lombok_version}"
    }

    tasks.withType(Jar)*.doFirst {
        includeEmptyDirs = false
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        if (name == "jar" || name == "devJar" || name == "sourcesJar") {
            configurations.shade.each { dep ->
                from project.zipTree(dep)
            }
        }
    }

    task sourcesJar(type: Jar) {
        classifier('sources')
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }
}

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

version = buildprop.version
group = buildprop.group
archivesBaseName = buildprop.name

dependencies {
    implementation 'org.jetbrains:annotations:20.1.0'
    compile "org.ow2.asm:asm-debug-all:5.0.3"
}